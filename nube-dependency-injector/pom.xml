<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Developed by Rubén García Ríos
  ~  Last modified 15/11/18 16:21
  ~  Copyright (c) 2018 All rights reserved.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>nube</artifactId>
		<groupId>org.nube</groupId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>nube-dependency-injector</artifactId>
	<name>NUBE - Dependency Injector</name>
	<description>NUBE - Dependency Injector</description>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<developers>
		<developer>
			<name>Rubén García Ríos</name>
			<email>garcia.rios.ruben@gmail.com</email>
		</developer>
	</developers>
	<!-- ============================== -->
	<!-- DEPENDENCY INJECTOR PROPERTIES -->
	<!-- ============================== -->
	<properties>
		<!-- =========================================== -->
		<!-- THIRD PARTY DEPENDENCIES VERSION PROPERTIES -->
		<!-- =========================================== -->
		<!-- SPRING DEPENDENCIES VERSIONS -->
		<spring-boot-dependencies.version>2.0.5.RELEASE</spring-boot-dependencies.version>
		<spring-boot-admin.version>2.0.4</spring-boot-admin.version>
		<spring-cloud-dependencies.version>Finchley.SR2</spring-cloud-dependencies.version>
		<spring-cloud-config-monitor.version>2.0.1.RELEASE</spring-cloud-config-monitor.version>
		<spring-cloud-task.version>2.0.0.RELEASE</spring-cloud-task.version>
		<spring-cloud-services.version>2.0.1.RELEASE</spring-cloud-services.version>
		<spring-cloud-task.version>2.0.0.RELEASE</spring-cloud-task.version>
		<spring-cloud-starter-eureka.version>1.4.5.RELEASE</spring-cloud-starter-eureka.version>
		<spring-cloud-starter-netflix-zuul.version>2.0.1.RELEASE</spring-cloud-starter-netflix-zuul.version>
		<spring-session.version>1.3.3.RELEASE</spring-session.version>
		<spring-session-data-mongodb.version>2.0.3.RELEASE</spring-session-data-mongodb.version>
		<spring-statemachine.version>2.0.1.RELEASE</spring-statemachine.version>
		<spring-security-oauth2.version>2.3.3.RELEASE</spring-security-oauth2.version>
		<!-- OTHER DEPENDENCIES VERSIONS -->
		<zipkin-server.version>2.11.6</zipkin-server.version>
		<zipkin-autoconfigure-ui.version>2.11.6</zipkin-autoconfigure-ui.version>
		<logstash-logback-encoder.version>5.2</logstash-logback-encoder.version>
		<!-- ================================ -->
		<!-- MAVEN PLUGINS VERSION PROPERTIES -->
		<!-- ================================ -->
		<maven-enforcer-plugin.version>3.0.0-M2</maven-enforcer-plugin.version>
		<maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
		<maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
		<maven-assembly-plugin.version>3.1.0</maven-assembly-plugin.version>
		<maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
		<maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<maven-release-plugin.version>2.5.3</maven-release-plugin.version>
		<maven-javadoc-plugin.version>3.0.1</maven-javadoc-plugin.version>
		<maven-exec-maven-plugin.version>1.6.0</maven-exec-maven-plugin.version>
		<maven-keytool-plugin.version>1.5</maven-keytool-plugin.version>
		<spring-boot-maven-plugin.version>2.0.5.RELEASE</spring-boot-maven-plugin.version>
		<git-commit-id-plugin.version>2.2.5</git-commit-id-plugin.version>
		<dockerfile-maven-plugin.version>1.4.7</dockerfile-maven-plugin.version>
	</properties>
	<!-- ============================ -->
	<!-- NUBE - DEPENDENCY MANAGEMENT -->
	<!-- ============================ -->
	<dependencyManagement>
		<dependencies>
			<!-- ================ -->
			<!-- NUBE - ASSEMBLER -->
			<!-- ================ -->
			<dependency>
				<!-- SSL FILES -->
				<groupId>${project.groupId}</groupId>
				<artifactId>nube-assembler-assembly</artifactId>
				<classifier>nube-services-ssl-files</classifier>
				<version>0.0.1-SNAPSHOT</version>
				<optional>false</optional>
				<type>zip</type>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<!-- LOGGING CONFIGURATION FILES -->
				<groupId>${project.groupId}</groupId>
				<artifactId>nube-assembler-assembly</artifactId>
				<classifier>nube-services-configuration-files</classifier>
				<version>0.0.1-SNAPSHOT</version>
				<optional>false</optional>
				<type>zip</type>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<!-- LOGGING CONFIGURATION FILES -->
				<groupId>${project.groupId}</groupId>
				<artifactId>nube-assembler-assembly</artifactId>
				<classifier>nube-logging-configuration-files</classifier>
				<version>0.0.1-SNAPSHOT</version>
				<optional>false</optional>
				<type>zip</type>
				<scope>provided</scope>
			</dependency>
			<!-- ============= -->
			<!-- NUBE - CORE -->
			<!-- ============= -->
			<dependency>
				<!-- BASE -->
				<groupId>${project.groupId}</groupId>
				<artifactId>nube-core-base</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<scope>compile</scope>
				<optional>false</optional>
			</dependency>

			<dependency>
				<!-- SECURITY -->
				<groupId>${project.groupId}</groupId>
				<artifactId>nube-core-security</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<scope>compile</scope>
				<optional>false</optional>
			</dependency>

			<dependency>
				<!-- CONFIGURATION -->
				<groupId>${project.groupId}</groupId>
				<artifactId>nube-core-configuration</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<scope>compile</scope>
				<optional>false</optional>
			</dependency>
			<!-- =============== -->
			<!-- NUBE - SERVICES -->
			<!-- =============== -->
			<dependency>
				<!-- EUREKA -->
				<groupId>${project.groupId}</groupId>
				<artifactId>nube-services-eureka</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>

			<dependency>
				<!-- CONFIGURATOR -->
				<groupId>${project.groupId}</groupId>
				<artifactId>nube-services-configurator</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>

			<dependency>
				<!-- ZIPKIN -->
				<groupId>${project.groupId}</groupId>
				<artifactId>nube-services-zipkin</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>

			<dependency>
				<!-- ADMIN MANAGER -->
				<groupId>${project.groupId}</groupId>
				<artifactId>nube-services-admin-manager</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>

			<dependency>
				<!-- API -->
				<groupId>${project.groupId}</groupId>
				<artifactId>nube-services-api</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>
	<!-- ###############################################################
		 ###############################################################
					E X T E R N A L   D E P E N D E N C I E S
		 ###############################################################
		 ############################################################### -->
			<!-- =================== -->
			<!-- SPRING BOOT STARTER -->
			<!-- =================== -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- ============ -->
			<!-- SPRING CLOUD -->
			<!-- ============ -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- ===================== -->
			<!-- SPRING CLOUD SERVICES -->
			<!-- ===================== -->
			<dependency>
				<groupId>io.pivotal.spring.cloud</groupId>
				<artifactId>spring-cloud-services-dependencies</artifactId>
				<version>${spring-cloud-services.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- ============== -->
			<!-- SPRING SESSION -->
			<!-- ============== -->
			<dependency>
				<groupId>org.springframework.session</groupId>
				<artifactId>spring-session</artifactId>
				<version>${spring-session.version}</version>
			</dependency>

			<dependency>
				<!-- Spring Session Data MongoDB -->
				<groupId>org.springframework.session</groupId>
				<artifactId>spring-session-data-mongodb</artifactId>
				<version>${spring-session-data-mongodb.version}</version>
			</dependency>
			<!-- =================== -->
			<!-- SPRING CLOUD CONFIG -->
			<!-- =================== -->
			<dependency>
				<!-- Monitor -->
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-config-monitor</artifactId>
				<version>${spring-cloud-config-monitor.version}</version>
			</dependency>
			<!-- =========== -->
			<!-- SPRING TASK -->
			<!-- =========== -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-task-dependencies</artifactId>
				<version>${spring-cloud-task.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- ==================== -->
			<!-- SPRING STATE MACHINE -->
			<!-- ==================== -->
			<dependency>
				<groupId>org.springframework.statemachine</groupId>
				<artifactId>spring-statemachine-bom</artifactId>
				<version>${spring-statemachine.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- ============= -->
			<!-- ZIPKIN SERVER -->
			<!-- ============= -->
			<dependency>
				<groupId>io.zipkin.java</groupId>
				<artifactId>zipkin-server</artifactId>
				<version>${zipkin-server.version}</version>
			</dependency>
			<!-- ========= -->
			<!-- ZIPKIN UI -->
			<!-- ========= -->
			<dependency>
				<groupId>io.zipkin.java</groupId>
				<artifactId>zipkin-autoconfigure-ui</artifactId>
				<version>${zipkin-autoconfigure-ui.version}</version>
			</dependency>
			<!-- ========================= -->
			<!-- SPRING BOOT ADMIN MANAGER -->
			<!-- ========================= -->
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-dependencies</artifactId>
				<version>${spring-boot-admin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- ========================= -->
			<!-- SPRING SECURITY OAUTH 2.0 -->
			<!-- ========================= -->
			<dependency>
				<!-- Spring OAuth 2.0 Services -->
				<groupId>org.springframework.security.oauth</groupId>
				<artifactId>spring-security-oauth2</artifactId>
				<version>${spring-security-oauth2.version}</version>
			</dependency>
			<!-- ============ -->
			<!-- GOOGLE GUAVA -->
			<!-- ============ -->
			<dependency>
				<!-- Added to avoid dependency conflicts -->
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>19.0</version>
			</dependency>
			<!-- ============= -->
			<!-- HDR HISTOGRAM -->
			<!-- ============= -->
			<dependency>
				<!-- Added to avoid dependency conflicts -->
				<groupId>org.hdrhistogram</groupId>
				<artifactId>HdrHistogram</artifactId>
				<version>2.1.10</version>
			</dependency>
			<!-- ================ -->
			<!-- LOGSTASH LOGBACK -->
			<!-- ================ -->
			<dependency>
				<!-- Logback encoder -->
				<groupId>net.logstash.logback</groupId>
				<artifactId>logstash-logback-encoder</artifactId>
				<version>${logstash-logback-encoder.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<!-- =================== -->
	<!-- NUBE - DEPENDENCIES -->
	<!-- =================== -->
	<dependencies>
		<dependency>
			<!-- Spring commons logging bridge -->
			<groupId>org.springframework</groupId>
			<artifactId>spring-jcl</artifactId>
		</dependency>
	</dependencies>
	<!-- ===== -->
	<!-- BUILD -->
	<!-- ===== -->
	<build>
		<!-- ================= -->
		<!-- PLUGIN MANAGEMENT -->
		<!-- ================= -->
		<pluginManagement>
			<plugins>
				<!-- ===== -->
				<!-- MAVEN -->
				<!-- ===== -->
				<plugin>
					<!-- Maven dependency plugin -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven-dependency-plugin.version}</version>
				</plugin>

				<plugin>
					<!-- Maven assembly plugin -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
				</plugin>

				<plugin>
					<!-- Maven resources plugin -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>

				<plugin>
					<!-- Maven clean plugin -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>

				<plugin>
					<!-- Maven javadoc plugin -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
				</plugin>
				<!-- ====== -->
				<!-- SPRING -->
				<!-- ====== -->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot-maven-plugin.version}</version>
				</plugin>
				<!-- ====== -->
				<!-- DOCKER -->
				<!-- ====== -->
				<plugin>
					<!-- Adds support for building Dockerfiles in Maven. -->
					<groupId>com.spotify</groupId>
					<artifactId>dockerfile-maven-plugin</artifactId>
					<version>${dockerfile-maven-plugin.version}</version>
				</plugin>
				<!-- ==================== -->
				<!-- GIT COMMIT ID PLUGIN -->
				<!-- ==================== -->
				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>${git-commit-id-plugin.version}</version>
				</plugin>
				<!-- ==================== -->
				<!-- KEYTOOL MAVEN PLUGIN -->
				<!-- ==================== -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>keytool-maven-plugin</artifactId>
					<version>${maven-keytool-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>